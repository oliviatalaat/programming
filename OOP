class Product:
    def __init__(self, product_ID, name, price, manufacturer, weight, expiration_date, year):
        self._product_ID = product_ID
        self.n = name
        self.p = price
        self.m = manufacturer
        self.w= weight
        self.ex_date = expiration_date
        self.y = year
        self.Supermarket_name = "My Supermarket"

    def display_product_details(self):
        print(f"Product ID: {self._product_ID}")
        print(f"Name: {self.n}")
        print(f"Price: ${self.p:.2f}")
        print(f"Manufacturer: {self.m}")
        print(f"Weight: {self.w} grams")
        print(f"Expiration Date: {self.ex_date}")
        print(f"Year: {self.y}")
        print(f"Supermarket Name: {self.Supermarket_name}")

    def change_product_id(self, new_product_id):
        self._product_ID = new_product_id

class Healthy(Product):
    def __init__(self, product_ID, name, price, manufacturer, weight, expiration_date, year):
        super().__init__(product_ID, name, price, manufacturer, weight, expiration_date, year)
        self.calories = 0

    def display_healthy_product_details(self):
        super().display_product_details()
        print(f"Calories: {self.calories} per gram")

    def update_calories(self, new_calories):
        self.calories = new_calories

    def compute_total_calories(self):
        total_calories = self.calories * self.w
        return total_calories
if __name__ == "__main__":
    healthy_product = Healthy(product_ID="123", name="Healthy Snack", price=5.95,
                              manufacturer="Healthy Foods Inc.", weight=100, expiration_date="23-4-2025", year=2025)
    healthy_product.display_healthy_product_details()
    healthy_product.update_calories(3)

    total_calories = healthy_product.compute_total_calories()
    print(f"Total calories: {total_calories:.2f}")
